type Actor implements Node {
  """The ID of an object"""
  id: ID!
  name: String
  age: String
  movies(after: String, first: Int, before: String, last: Int): MovieConnection
}

"""A connection to a list of items."""
type ActorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ActorEdge]
}

"""An edge in a connection."""
type ActorEdge {
  """The item at the end of the edge"""
  node: Actor

  """A cursor for use in pagination"""
  cursor: String!
}

input AddMovieInput {
  title: String!
  description: String
  clientMutationId: String
}

type AddMoviePayload {
  movie: Movie
  clientMutationId: String
}

input EditMovieInput {
  globalId: String!
  title: String
  description: String
  clientMutationId: String
}

type EditMoviePayload {
  movie: Movie
  clientMutationId: String
}

type Main implements Node {
  """The ID of an object"""
  id: ID!
  movies(after: String, first: Int, before: String, last: Int): MoviesConnection
}

type Movie implements Node {
  """The ID of an object"""
  id: ID!
  title: String
  description: String
  actors(after: String, first: Int, before: String, last: Int): ActorConnection
}

"""A connection to a list of items."""
type MovieConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MovieEdge]
}

"""An edge in a connection."""
type MovieEdge {
  """The item at the end of the edge"""
  node: Movie

  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type MoviesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MoviesEdge]
}

"""An edge in a connection."""
type MoviesEdge {
  """The item at the end of the edge"""
  node: Movie

  """A cursor for use in pagination"""
  cursor: String!
}

type Mutation {
  addMovie(input: AddMovieInput!): AddMoviePayload
  editMovie(input: EditMovieInput!): EditMoviePayload
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
  main: Main
}
